package ua.itea.dao;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import ua.itea.dao.jdbc.LocalManagerJDBC;
import ua.itea.dao.jdbc.ManagerJDBC;

import java.sql.*;

/**
 * This class implements basic methods for connect database
 *
 * @author Maksym Stetsenko
 */
abstract class AbstractDAO<E> implements DAO<E> {

    protected Log log = LogFactory.getLog(getClass());
    private static ManagerJDBC manager = new LocalManagerJDBC();
    private Connection connection;

    protected AbstractDAO() {
    }

    protected Connection getConnection() throws SQLException {
        connection = manager.getConnection();
        return connection;
    }

    protected void connectionClose() {
        manager.connectionClose();
    }

    protected Statement getStatement() throws SQLException {
        return getConnection().createStatement();
    }

    protected PreparedStatement getPreparedStatement(String sql) throws SQLException {
        return getConnection().prepareStatement(sql);
    }

    protected PreparedStatement getPreparedStatement(String sql, int autoGeneratedKeys) throws SQLException {
        return getConnection().prepareStatement(sql, autoGeneratedKeys);
    }

    protected ResultSet getResultSet(String sql) throws SQLException {
        return getStatement().executeQuery(sql);
    }

    protected abstract E convertResultSetToEntity(ResultSet resultSet) throws SQLException;

}
